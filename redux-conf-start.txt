https://codesandbox.io/s/sleepy-curran-l8bii4?file=/src/App.js

za napraviti cookie language options za user - https://www.youtube.com/watch?v=w04LXKlusCQ&ab_channel=Classsed

video za protected routes - https://www.youtube.com/watch?v=oUZjO00NkhY&t=121s&ab_channel=DaveGray

RTK Query dobar tutorial - https://www.youtube.com/watch?v=YWbZILe35P4&ab_channel=DipeshMalvia --> pogledaj ostale isto


ovo je za datume - https://www.youtube.com/watch?v=tgcCl52EN84&ab_channel=CooperCodes
- kada se spremaju datumi u supabase, uvijek pretvori Date() objekt u ISOString(), jer to je format koji supabase prima

- pogledaj ovaj api za storage upload za slike - https://supabase.com/docs/reference/javascript/v1/storage-createbucket

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

 ///////////////////////////////////////////FOR THE RESERVATIONS //////////////////
 Filter Reservations: Filtering reservations based on various criteria such as reservation date, client name, or reservation status (confirmed, pending, cancelled) can make it easier to find specific reservations and manage them more efficiently.

Sort Reservations: Sorting reservations by various criteria such as reservation date, client name, or reservation status can make it easier to organize reservations and prioritize which ones to manage first.

Pagination: If there are a large number of reservations, consider implementing pagination to limit the number of reservations displayed on each page, and make it easier to navigate through them.

Search Functionality: Adding a search functionality to search reservations by client name, reservation date or other relevant information can make it easier to find specific reservations quickly.

Reservation Details: Being able to view detailed information about each reservation can help manage reservations more efficiently. Include details such as the client name, reservation date, reservation status, number of guests, and any special requests or notes associated with the reservation.

Edit and Delete Functionality: As an admin, you may need to edit or delete reservations. Consider adding functionality to allow you to modify or delete reservations easily.

to do: add readme doc, solve the reservations problem and issue when user clicks the apartment that 
wants to reserve, the app does not get id for selected apartment, add refresh token with each signin 

///////////////////////////////////////////SAVED APARTMENTS ////////////////////////////////////
- saving will be in user slice, because I will be tracking saved apartments for each user
- maping data:

- data design: wishlist and saved apartments
- each wishlist will contain ID, user`s ID and name
- saved apartments table will contain ID, wishlist`s ID and apartment`s id
TO DO later: supabase tables already made! put this into workv in user`s slice!

5.423 - fux the bug in apartment component, when on mount it fetches user`s saved apartments, but whenn
visited another route, the data is lost; its still persisted in supabase, but not in redux store

since the liked status of each apartment needs to be available on many apartment components with different jsx, 
consider creating a custom hook which can be imported to each apartment jsx components through app
and it should work with any of them;Ä‘

MAJOR BUG FIXED: the problem was that userID was undefined every time I tried to send it to userSlice. I simply get the userID directly
in the async thunk and then send user credentials to supabase query, that way is ensured that user credentials (in this case userID)
is always defined

TO DO: when user clicks on previous reservation filter, and clicks the link from useLocation hook, which should navigate to apartment 
that user already reserved in the past, there is an error which said that apartment id and title are null 